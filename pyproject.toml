[tool.poetry]
name = "License Plate Validator"
version = "1.0.0"
description = ""
authors = ["Benjamin Banduhn <deluge@banduhn.com>"]
packages = [
       { include = "app", from = "src" },
]

[tool.poetry.dependencies]
python = ">=3.11,<3.12"
Django = "4.1.3"
psycopg2-binary = "2.9.5"
djangorestframework = "3.14.0"


[tool.poetry.dev-dependencies]
black = "22.10.0"
factory-boy = "3.2.1"
flake8 = "4.0.1"
flake8-black = "0.3.3"
freezegun = "1.2.2"
isort = "5.10.1"
pytest = "7.1.3"
pytest-cov = "4.0.0"
pytest-django = "4.5.2"
pytest-flake8-v2 = "1.2.3"
pytest-isort = "3.0.0"

[tool.poetry.extras]
server = ["uwsgi"]

[build-system]
requires = ["poetry-core>=1.4.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
addopts = "--verbose --isort --flake8 --tb=short --nomigrations"

testpaths = [
	"src/",
]

norecursedirs = [
	"src/app/conf",
]

python_files = [
	"test_*.py",
]

filterwarnings = [
	"ignore:SelectableGroups:DeprecationWarning",
]

DJANGO_SETTINGS_MODULE = "testing.settings"

[tool.black]
skip-numeric-underscore-normalization = true
exclude = '''
/(
    \.git
  | \.venv
  | venv
)/
'''

[tool.isort]
known_first_party = ["app"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
default_section = "THIRDPARTY"
skip_glob = [
	"src/app/wsgi.py",
]
line_length = 88
use_parentheses = true
include_trailing_comma = true
multi_line_output = 3
lines_after_imports = 2

[tool.coverage.run]
branch = true
include = [
	"src/app/*",
]

omit = [
	"src/app/*settings.py",
	"src/app/urls.py",
	"src/app/wsgi.py",
	"src/manage.py",
	"src/testing/*",
	"*/__init__.py",
	"*migrations*",
	"*setup.py",
]

[tool.coverage.report]
exclude_lines = [
	"raise NotImplementedError",
]
